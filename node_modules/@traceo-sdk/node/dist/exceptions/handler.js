"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.catchException = void 0;
const stacktrace_parser_node_1 = require("stacktrace-parser-node");
const node_core_1 = require("@traceo-sdk/node-core");
/**
 * For using in middleware and as an function in try/catch
 *
 * Base usage:
 * @example
 *
 * ```
 * } catch (error) {
 *     catchException(error);
 * }
 * ```
 *
 *
 */
const catchException = async (error) => {
    if (node_core_1.utils.isClientConnected()) {
        await handleException(error);
    }
    return;
};
exports.catchException = catchException;
const handleException = async (error) => {
    const event = await prepareException(error);
    node_core_1.HttpClient.request({
        url: node_core_1.CAPTURE_ENDPOINT.INCIDENT,
        body: event,
        onError: (error) => {
            console.error(`Traceo Error. Something went wrong while sending new Incident to Traceo. Please report this issue.`);
            console.error(`Caused by: ${error.message}`);
        }
    });
};
const prepareException = async (error) => {
    const { stack } = error;
    const platform = node_core_1.utils.getOsDetails();
    const { message, name, traces } = await stacktrace_parser_node_1.stacktrace.parse(error);
    const event = {
        name,
        message,
        traces,
        stack,
        platform
    };
    return event;
};
